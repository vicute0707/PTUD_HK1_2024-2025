package component;

import entity.User;
import bus.UserBUS;
import dialog.EmployeeDialog;

import javax.swing.*;
import java.util.List;
import java.util.UUID;
import java.awt.Dimension;
import java.awt.Font;
import java.text.SimpleDateFormat;

public class EmployeeManagementPanel extends BaseManagementPanel {
	private final UserBUS userBUS;
	private final SimpleDateFormat dateFormat;

	public EmployeeManagementPanel() {
		super("Quản lý nhân viên", new String[] { "Mã NV", "Họ tên", "Tên đăng nhập", "Giới tính", "Ngày sinh", "SDT",
				"Email", "Vai trò", "Trạng thái" }, loadEmployeeData());
		userBUS = new UserBUS();
		dateFormat = new SimpleDateFormat("yyyy-MM-dd");
	}

	private static Object[][] loadEmployeeData() {
		UserBUS bus = new UserBUS();
		List<User> users = bus.getAllUsers();
		Object[][] data = new Object[users.size()][9];
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

		for (int i = 0; i < users.size(); i++) {
			User user = users.get(i);
			data[i] = new Object[] { user.getUserID(), user.getFullName(), user.getUsername(), user.getGender(),
					sdf.format(user.getBirthDate()), user.getPhone(), user.getEmail(), user.getRole(),
					user.getStatus() };
		}
		return data;
	}

	@Override
	protected void handleAdd() {
		try {
			User user = new User();
			user.setUserID(userBUS.generateNewUserID());

			EmployeeDialog dialog = new EmployeeDialog((JFrame) SwingUtilities.getWindowAncestor(this),
					"Thêm nhân viên", user, true);

			dialog.setVisible(true);

			if (dialog.isConfirmed()) {
				
					refreshTable();
					JOptionPane.showMessageDialog(this, "Thêm nhân viên thành công!");
				
					
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
		}
	}

	private void refreshTable() {
		try {
			List<User> users = userBUS.getAllUsers();
			updateTableData(users);
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "Lỗi khi làm mới bảng: " + e.getMessage(), "Lỗi",
					JOptionPane.ERROR_MESSAGE);
		}
	}

	private void updateTableData(List<User> users) {
		tableModel.setRowCount(0);
		for (User user : users) {
			tableModel.addRow(new Object[] { user.getUserID(), user.getFullName(), user.getUsername(), user.getGender(),
					dateFormat.format(user.getBirthDate()), user.getPhone(),

					user.getEmail(), user.getRole(), user.getStatus() });
		}
	}

	@Override

	protected void handleAbout() {
		try {
			int selectedRow = table.getSelectedRow();
			if (selectedRow < 0) {
				JOptionPane.showMessageDialog(this, "Vui lòng chọn một nhân viên để xem chi tiết.", "Thông báo",
						JOptionPane.WARNING_MESSAGE);
				return;
			}

			String userID = table.getValueAt(selectedRow, 0).toString();
			User user = userBUS.getUserById(userID);

			StringBuilder details = new StringBuilder();
			details.append("Mã NV: ").append(user.getUserID()).append("\n");
			details.append("Họ tên: ").append(user.getFullName()).append("\n");
			details.append("Tên đăng nhập: ").append(user.getUsername()).append("\n");
			details.append("Giới tính: ").append(user.getGender()).append("\n");
			details.append("Ngày sinh: ").append(dateFormat.format(user.getBirthDate())).append("\n");
			details.append("SDT: ").append(user.getPhone()).append("\n");
			details.append("Email: ").append(user.getEmail()).append("\n");
			details.append("Vai trò: ").append(user.getRole()).append("\n");
			details.append("Trạng thái: ").append(user.getStatus());

			JTextArea textArea = new JTextArea(details.toString());
			textArea.setEditable(false);
			textArea.setFont(new Font("Roboto", Font.PLAIN, 14));

			JScrollPane scrollPane = new JScrollPane(textArea);
			scrollPane.setPreferredSize(new Dimension(400, 300));

			JOptionPane.showMessageDialog(this, scrollPane, "Chi tiết nhân viên", JOptionPane.INFORMATION_MESSAGE);

		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "Lỗi khi hiển thị chi tiết: " + e.getMessage(), "Lỗi",
					JOptionPane.ERROR_MESSAGE);
		}
	}
}